worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    aio on;
    tcp_nopush on;
    include mime.types;
    # limit the number of connections per single IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    # limit the number of requests for a given session
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=50r/s;
    #    limit_req_zone $binary_remote_addr zone=by_ip:32m rate=10000r/s;
    #    limit_req_status 500;
	# log_format custom '$remote_addr ^ $remote_user [$time_local] ^ '
	# 					'$request ^ $status ^ $body_bytes_sent ^ '
	# 					'$http_referer ^ $http_user_agent ^ $http_x_forwarded_for';
	# access_log /var/log/nginx/access.log custom;
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    default_type application/octet-stream;

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        add_header Strict-Transport-Security "max-age=31536000" always;

        tcp_nodelay on;
        client_max_body_size 11m;

        gzip on;
        gzip_types text/xml;
        gzip_types text/javascript;
        gzip_types application/json;
        gzip_types application/x-javascript;
        gzip_types application/javascript;
        gzip_types application/x-font-ttf;
        gzip_types application/ttf;
        gzip_types image/x-icon;
        gzip_types text/plain;
        gzip_types text/css;
        gzip_disable "msie6";

        location /application1/ {
            proxy_pass http://application1:3007/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location ~* ^/application1/application1/_next/static/ {
            add_header X-Cache-Status $upstream_cache_status;
            sendfile on;
            sendfile_max_chunk 1m;
            expires 30d;
            proxy_ignore_headers Cache-Control;
            alias http://application1:3007/application1/_next/static;
        }

        location ~* ^/application1/application1/_next/ {
            proxy_pass http://application1:3007;
        }

        location /application2/ {
            proxy_pass http://application2:3008/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        location ~* ^/application2/application2/_next/static/ {
            add_header X-Cache-Status $upstream_cache_status;
            sendfile on;
            sendfile_max_chunk 1m;
            expires 30d;
            proxy_ignore_headers Cache-Control;
            proxy_pass http://application2:3008;
        }

        location ~* ^/application2/application2/_next/ {
            proxy_pass http://application2:3008;
        }

        # location /favicon.* {
        #     proxy_pass http://server;
        # }

        # location /files {
        #     # autoindex on;
        #     add_header X-Cache-Status $upstream_cache_status;
        #     sendfile on;
        #     sendfile_max_chunk 1m;
        #     expires 30d;
        #     alias /opt/files;
        # }

        location /health {
            access_log off;
            return 200 "nginx is healthy\n";
        }

        location ~* ^/(wp-content|wp-includes|wp-config)/ {
            return 404;
        }

        location ~* /.php {
            return 404;
        }

        location ~* /.env {
            return 404;
        }

        # location /goaccess_web.html {
        #     auth_basic "Restricted";
        #     auth_basic_user_file /opt/.htpasswd;
        #     sendfile on;
        #     alias /opt/report/report.html;
        # }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
